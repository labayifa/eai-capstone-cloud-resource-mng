I'm developing a ride-hailing platform with separate Rider and Driver apps and need advice on a storage solution. The system needs to handle user profiles, real-time driver locations, trip records, and payment data securely. It should scale well during peak traffic, support fast read/write operations, and integrate with analytics tools, while remaining cost-effective. What would you recommend for initial storage architecture?



I expect around 10,000 daily active users initially, with ~1,000 concurrent trips during peak hours. The system needs sub-second response times for real-time location updates and user matching. The data volume would be roughly 1GB/day including user profiles, trip logs, and location data.



what other solutions do you have compared to DynamoDB like RDS?








based on my project description, Which one is the best one or do you recommend a combination of the two?







can I  have a hybrid storage system architecture recommendation for my ride hailing app?






Okaay, can you help me create the recommended S3 storage?
use the previously provided AWS credentials to create the S3 bucket.


Okaay, can you help me create the recommended DynamoDB table?
use the previously provided AWS credentials to create the DynamoDB table.
here is the access key and secret key
AWS_ACCESS_KEY_ID='AKIAU6GDZD3MNLTT7TON'
AWS_SECRET_ACCESS_KEY='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'

